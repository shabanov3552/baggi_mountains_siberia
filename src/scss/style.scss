@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
@import url(https://fonts.googleapis.com/css?family=Montserrat:regular,600&display=swap);

// Подключить если есть локальные файлы шрифтов
//@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Montserrat";
$fontSize: rem(16); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #fff; // Цвет шрифта по умолчанию

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1600;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 0;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {

	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}

	// Сайт загружен
	.loaded & {
		.preloader {
			opacity: 0;
			visibility: hidden;
		}

		@media (min-width: $mobile) {
			// .fullscreen-block__main-bg-ground {
			// 	transform: translate(-14%, 0px);
			// 	opacity: 0;
			// 	visibility: hidden;
			// 	transition: transform 1.5s ease-out 0s, opacity 0.5s ease 0.3s, visibility 0.5s ease 0.3s;
			// }

			// .fullscreen-block__main-bg-mountains {
			// 	transform: translate(-13.8%, 0px);
			// 	opacity: 0;
			// 	visibility: hidden;
			// 	transition: transform 1.5s ease-out 0s, opacity 0.5s ease 0.3s, visibility 0.5s ease 0.3s;
			// }

			// .fullscreen-block__main-bg-guggy {
			// 	transform: translate(0%, 0px);
			// 	opacity: 0;
			// 	visibility: hidden;
			// 	transition: transform 1.5s ease-out 0s, opacity 0.5s ease 0.3s, visibility 0.5s ease 0.3s;
			// }

			.header.full-animation {
				.header__container {
					transform: translate(0px, 0px);
					opacity: 1;
					transition: opacity 0.3s ease-out 0.3s, transform 0.3s ease-out 0.3s;
				}
			}

			.fullscreen-block__title {
				transform: translate(0px, 0px);
				opacity: 1;
				transition: all 0.3s ease-out 0.3s;
			}

			.fullscreen-block__slider {
				transform: translate(0px, 0px);
				opacity: 1;
				transition: all 0.3s ease-out 0.3s;
			}

			.fullscreen-block {

				.swiper-button-prev,
				.swiper-button-next {
					opacity: 1;
					transition: all 0.3s ease 0.3s;
				}

				.ytb-btn {
					opacity: 1;
					transition: all 0.3s ease 0.3s;
				}
			}
		}
	}
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	background-color: #2e4a6b;

	// Прижимаем footer
	>main {
		flex: 1 1 auto;
	}

	// Фикс для слайдеров
	>* {
		min-width: 0;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
			@include adaptiveValue("padding-left", 160, 80, 1920, 991);
			@include adaptiveValue("padding-right", 160, 80, 1920, 991);

			@media (max-width: $tablet) {
				@include adaptiveValue("padding-left", 80, 20, 992, 680, 1);
				@include adaptiveValue("padding-right", 80, 20, 992, 680, 1);
			}
		}

		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
}

@else {

	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;

		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		}

		@else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}

		@media (max-width: $pc) {
			max-width: rem(970);
		}

		@media (max-width: $tablet) {
			max-width: rem(750);
		}

		@media (max-width: $mobile) {
			max-width: none;

			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";
@import "tours";
@import "detail";
@import "about";
@import "contacts";
@import "memo-tourist";
@import "questions-answers";